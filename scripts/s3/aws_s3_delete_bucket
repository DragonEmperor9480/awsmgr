function aws_s3_delete_bucket() {
    aws_s3_list_bucket
    
    bucket_status=$(aws s3 ls)
    if [[ -z "$bucket_status" ]]; then
    return
    fi

    read -p "Enter a bucket name you want to delete: " s3_name

    show_processing_animation "Deleting S3 Bucket..." &
    animation_pid=$!

    output=$(aws s3 rb s3://"$s3_name" 2>&1)

    kill "$animation_pid" &>/dev/null
    wait "$animation_pid" 2>/dev/null
    echo ""

    if echo "$output" | grep -q "AccessDenied"; then
        echo -e "${BOLD}${RED}Error: Bucket '$s3_name' doesn't exist or you don't have access!${RESET}"

    elif echo "$output" | grep -q "NoSuchBucket"; then
        echo -e "${BOLD}${RED}Error: Bucket '$s3_name' does not exist!${RESET}"

    elif echo "$output" | grep -q "BucketNotEmpty"; then
        echo -e "${BOLD}${RED}Error: Bucket '$s3_name' is not empty!${RESET}\n"

        while true; do
            read -p "Would you still like to delete everything inside it including versions? (y/n): " s3_input
            if [[ "$s3_input" == "y" ]]; then
                echo -e "${YELLOW}Deleting all objects and versions in the bucket...${RESET}"

                show_processing_animation "Cleaning S3 Bucket..." &
                animation_pid=$!

                # Delete all object versions
                aws s3api list-object-versions --bucket "$s3_name" --query 'Versions[*].[Key,VersionId]' --output text |
                while read -r key version_id; do
                    aws s3api delete-object --bucket "$s3_name" --key "$key" --version-id "$version_id" >/dev/null
                done

                # Delete all delete markers
                aws s3api list-object-versions --bucket "$s3_name" --query 'DeleteMarkers[*].[Key,VersionId]' --output text |
                while read -r key version_id; do
                    aws s3api delete-object --bucket "$s3_name" --key "$key" --version-id "$version_id" >/dev/null
                done

                kill "$animation_pid" &>/dev/null
                wait "$animation_pid" 2>/dev/null
                echo ""

                show_processing_animation "Trying to delete bucket again..." &
                animation_pid=$!

                output=$(aws s3 rb s3://"$s3_name" 2>&1)

                kill "$animation_pid" &>/dev/null
                wait "$animation_pid" 2>/dev/null
                echo ""

                if echo "$output" | grep -q "remove_bucket"; then
                    echo -e "${BOLD}${GREEN}Bucket '$s3_name' deleted successfully after cleaning!${RESET}"
                else
                    echo -e "${BOLD}${RED}Error: Couldn't delete the bucket after cleaning.${RESET}"
                    echo "$output"
                fi
                break

            elif [[ "$s3_input" == "n" ]]; then
                echo -e "${CYAN}Operation canceled.${RESET}"
                break
            else
                echo -e "${YELLOW}Invalid input. Please enter 'y' or 'n'.${RESET}"
            fi
        done

    elif echo "$output" | grep -q "remove_bucket"; then
        echo -e "${BOLD}${GREEN}Bucket '$s3_name' deleted successfully!${RESET}"

    else
        echo -e "${YELLOW}Unexpected error occurred:${RESET}"
        echo "$output"
    fi
}

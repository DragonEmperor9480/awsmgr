function aws_s3_list_bucket_objects() {
    aws_s3_list_bucket
    output=$(aws_s3_list_bucket)

    # Check if no buckets are listed
    if echo "$output" | grep -q "No S3 buckets found" || [[ -z "$output" ]]; then
        echo -e "${BOLD}${RED}Since there are no S3 buckets, no objects to list now!${RESET}"
        return
    fi

    read -p "Enter the bucket name you want to list objects from: " s3_bucket

    # Fetch object list
    objects=$(aws s3 ls s3://"$s3_bucket" --recursive 2>&1)

    # Handle invalid bucket name
    if echo "$objects" | grep -q "NoSuchBucket"; then
        echo -e "${BOLD}${RED}Error: The specified bucket '$s3_bucket' does not exist!${RESET}"
        return
    fi

    # Handle empty bucket
    if [[ -z "$objects" ]]; then
        echo -e "${BOLD}${YELLOW}No objects found in bucket '$s3_bucket'.${RESET}"
        return
    fi

    # Print Table Header with Borders
    echo -e "${BOLD}┌──────────────────────┬────────────────────────────────┬────────────────────────┐${RESET}"
    echo -e "${BOLD}│     Date Created     │          Object Name           │    Object Size (KB)    │${RESET}"
    echo -e "${BOLD}├──────────────────────┼────────────────────────────────┼────────────────────────┤${RESET}"

    # Process each object and format output
    while read -r date time size object; do
        if [[ -n "$object" ]]; then
            size_kb=$(( (size + 1023) / 1024 ))  # Convert bytes to KB (rounded up)

            if [[ ${#object} -gt 25 ]]; then
                truncated_object="${object:0:22}..."
            else
                truncated_object="$object"
            fi

            printf "${BOLD}│ %-20s │ %-30s │ %10s KB          │${RESET}\n" "$date" "$truncated_object" "$size_kb"
        fi
    done < <(echo "$objects")

    echo -e "${BOLD}└──────────────────────┴────────────────────────────────┴────────────────────────┘${RESET}"
}
